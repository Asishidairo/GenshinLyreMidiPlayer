<UserControl
    x:Class="GenshinLyreMidiPlayer.Views.LyrePlayerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"

    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:s="https://github.com/canton7/Stylet"

    xmlns:viewModels="clr-namespace:GenshinLyreMidiPlayer.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewModels:LyrePlayerViewModel}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />

            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Command="{s:Action OpenFile}" Background="Transparent">
                <ui:FontIcon Glyph="&#xE8E5;" />
            </Button>

            <TextBlock
                Grid.Column="1" VerticalAlignment="Center"
                Text="{Binding Playlist.OpenedFile.Title, Mode=OneWay, FallbackValue=Open...}" />
        </Grid>

        <ui:SimpleStackPanel
            Grid.Row="1" Margin="0,50"
            Orientation="Horizontal"
            HorizontalAlignment="Center">

            <Button s:View.ActionTarget="{Binding Playlist}" Command="{s:Action ToggleShuffle}">
                <ui:FontIcon Glyph="&#xE14B;" Foreground="{Binding Playlist.ShuffleStateColor}" />
            </Button>

            <Button Command="{s:Action Previous}"
                    IsHitTestVisible="{Binding CanHitPrevious}">
                <ui:FontIcon Glyph="&#xE892;" />
            </Button>
            <Button Command="{s:Action PlayPause}"
                    IsHitTestVisible="{Binding CanHitPlayPause}">
                <ui:FontIcon Glyph="{Binding PlayPauseIcon}" />
            </Button>
            <Button Command="{s:Action Next}"
                    IsHitTestVisible="{Binding CanHitNext}">
                <ui:FontIcon Glyph="&#xE893;" />
            </Button>

            <Button s:View.ActionTarget="{Binding Playlist}" Command="{s:Action ToggleLoop}">
                <ui:FontIcon Glyph="{Binding Playlist.LoopStateString}" />
            </Button>
        </ui:SimpleStackPanel>

        <Grid Row="2" Margin="10, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" VerticalAlignment="Center"
                       Text="{Binding CurrentTime, StringFormat=m\\:ss}" />
            <Slider
                Grid.Column="1" Padding="5, 0"
                IsEnabled="{Binding CanHitPlayPause}"
                Value="{Binding SongSlider}"
                Maximum="{Binding Path=MaximumTime.TotalSeconds}" />
            <TextBlock Grid.Column="2" VerticalAlignment="Center"
                       Text="{Binding MaximumTime, StringFormat=m\\:ss}" />
        </Grid>

        <GroupBox Grid.Row="3" Header="MIDI Tracks">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Separator Grid.Row="0" Margin="0,0,0,15" />
                <ScrollViewer Grid.Row="1">
                    <ItemsControl ItemsSource="{Binding MidiTracks}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ui:ToggleSwitch
                                    IsOn="{Binding IsChecked}"
                                    OffContent="{Binding TrackName, TargetNullValue=Unknown}"
                                    OnContent="{Binding TrackName, TargetNullValue=Unknown}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="4" Header="MIDI Instrument">
            <ui:SimpleStackPanel Orientation="Horizontal">
                <ComboBox
                    ItemsSource="{Binding MidiInputs}"
                    SelectedItem="{Binding SelectedMidiInput}"
                    DisplayMemberPath="DeviceName" />
                <Button Command="{s:Action RefreshDevices}">
                    <ui:FontIcon Glyph="&#xE72C;" />
                </Button>
            </ui:SimpleStackPanel>
        </GroupBox>
    </Grid>
</UserControl>